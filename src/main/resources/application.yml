spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    defer-datasource-initialization: true # 테스트용 데이터베이스 띄울때 초기데이터
    hibernate:
      ddl-auto: create
    show-sql: true # 쿼리 보기
    properties:
      hibernate:
        format_sql: true # 한줄로 나오는 디버그 쿼리문을 포맷팅해줌
        default_batch_fetch_size: 100 # jpa에서 복잡한 쿼리를 사용할때 한번에 벌크로 셀렉트
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id # 사용자 정보 고유값
security:
  oauth2:
    authorized-redirect-uri: "http://localhost:8080" #OAuth 인증 결과 리다이렉트
  jwt:
    issuer: conny
    client-secret: ${jwt.secret}
    accessToken:
      header: access
      expiry-seconds: 86400 # 1day
    refreshToken:
      header: refresh
      expiry-seconds: 2592000 # 30days
debug: false
management:
  endpoints:
    web:
      exposure:
        include: "*"
logging:
  level:
    com.fastcampus.projectboardadmin: debug # 여기서 발생하는 모든 로그는 debug 레벨로 보겠다.
    org.springframework.web.servlet: debug # response, request 로그
    org.hibernate.type.descriptor.sql.BasicBinder: trace # 쿼리 로그에서 바인딩 파라미터를 보기위해 설정
